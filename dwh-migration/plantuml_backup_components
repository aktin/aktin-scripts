
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'Create backups
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

@startuml
left to right direction

rectangle "Components necessary for dwh backup" {


    package "database backup" {
        database "aktin" {
        }
        database "i2b2" {
        }

        db_api_in --> [i2b2_dump]
        db_api_in --> [aktin_dump]

        [i2b2_dump] <. i2b2
        [aktin_dump] <. aktin

        [i2b2_dump] --> db_api_out
        [aktin_dump] --> db_api_out
    }


    package "dwh/wildfly configurations" {
        dwh_api_in --> [backup aktin.properties]
        dwh_api_in --> [backup standalone.conf]
        dwh_api_in --> [backup standalone.xml]

        [backup aktin.properties] --> dwh_api_out
        [backup standalone.conf] --> dwh_api_out
        [backup standalone.xml] --> dwh_api_out

    }


    [Create backup dir] ---> dwh_api_in
    [Create backup dir] ---> db_api_in
    db_api_out --> [Compress Backup dir to file]
    dwh_api_out --> [Compress Backup dir to file]


}

@enduml


''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'create docker backup
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

@startuml
left to right direction

rectangle "Components necessary for docker-dwh backup" {
    ' init components
    [check container status]
    [Create backup dir] #LightBlue

    [check container status] --> [Create backup dir]

    package "database backup" {
        [Create backup dir] --> [move to postgresql container]


        node "docker database-container" {
            database "aktin" {
            }
            database "i2b2" {
            }

            [move to postgresql container] --> [aktin_dump]
            [move to postgresql container] --> [i2b2_dump]
            [i2b2_dump] <. i2b2
            aktin .> [aktin_dump]
            [i2b2_dump] --> [move i2b2_dump to host]
            [move i2b2_dump to host] --> [exit postgresql container]
            [aktin_dump] --> [move aktin_dump to host]
            [move aktin_dump to host] --> [exit postgresql container]

        }
    }


    package "dwh/wildfly configurations" {
        [Create backup dir] --> [move to wildfly container]


        node "docker wildfly-container" {
            [move to wildfly container] --> [backup aktin.properties]
            [move to wildfly container] --> [backup aktin.properties backups]
            [move to wildfly container] --> [backup standalone.conf]
            [move to wildfly container] --> [backup standalone.xml]

            [backup aktin.properties] --> [move config-backups to host]
            [backup aktin.properties backups] --> [move config-backups to host]
            [backup standalone.conf] --> [move config-backups to host]
            [backup standalone.xml] --> [move config-backups to host]
            [move config-backups to host] --> [exit wildfly container]
        }
    }

    [exit wildfly container] --> [Compress Backup dir to tar-file]
    [exit postgresql container] --> [Compress Backup dir to tar-file]
}
@enduml

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''





''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'create unified backup
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

@startuml
left to right direction

rectangle "Components necessary for unified backup" {

    [check container status] --> [Create backup dir]

    package "database backup" {
        [Create backup dir] --> [move to postgresql container]


        node "docker database-container" {
            database "aktin" {
            }
            database "i2b2" {
            }

            [move to postgresql container] --> [aktin_dump]
            [move to postgresql container] --> [i2b2_dump]
            [i2b2_dump] <. i2b2
            aktin .> [aktin_dump]
            [i2b2_dump] --> [move i2b2_dump to host]
            [move i2b2_dump to host] --> [exit postgresql container]
            [aktin_dump] --> [move aktin_dump to host]
            [move aktin_dump to host] --> [exit postgresql container]

        }
    }


    package "dwh/wildfly configurations" {
        [Create backup dir] --> [move to wildfly container]


        node "docker wildfly-container" {
            [move to wildfly container] --> [backup aktin.properties]
            [move to wildfly container] --> [backup aktin.properties backups]
            [move to wildfly container] --> [backup standalone.conf]
            [move to wildfly container] --> [backup standalone.xml]

            [backup aktin.properties] --> [move config-backups to host]
            [backup aktin.properties backups] --> [move config-backups to host]
            [backup standalone.conf] --> [move config-backups to host]
            [backup standalone.xml] --> [move config-backups to host]
            [move config-backups to host] --> [exit wildfly container]
        }
    }

    [exit wildfly container] --> [Compress Backup dir to tar-file]
    [exit postgresql container] --> [Compress Backup dir to tar-file]
}
legend left
|= Color |= Meaning |
|<#LightBlue>       | Container Status Check |
|<#LightGreen>      | Backup Directory Setup |
|<#Orange>          | Final Compression Step |
endlegend
@enduml

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


@startuml

rectangle "Creating backups local" {


package "Some Group" {
  HTTP - [First Component]
  [Another Component]
}

node "Other Groups" {
  FTP - [Second Component]
  [First Component] --> FTP
}

cloud {
  [Example 1]
}


database "MySql" {
  folder "This is my folder" {
    [Folder 3]
  }
  frame "Foo" {
    [Frame 4]
  }
}


[Another Component] --> [Example 1]
[Example 1] --> [Folder 3]
[Folder 3] --> [Frame 4]

}


@enduml
